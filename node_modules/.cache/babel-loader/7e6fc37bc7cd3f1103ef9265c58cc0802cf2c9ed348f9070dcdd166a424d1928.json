{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Messages=()=>{const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');useEffect(()=>{// Fetch existing messages from backend\naxios.get('/api/messages').then(response=>{setMessages(response.data);});},[]);const sendMessage=()=>{axios.post('/api/messages',{text:newMessage}).then(()=>{setMessages([...messages,{text:newMessage}]);setNewMessage('');});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Messages\"}),/*#__PURE__*/_jsx(\"ul\",{children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"li\",{children:message.text},index))}),/*#__PURE__*/_jsx(\"input\",{value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type your message\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]});};export default Messages;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Messages","messages","setMessages","newMessage","setNewMessage","get","then","response","data","sendMessage","post","text","children","map","message","index","value","onChange","e","target","placeholder","onClick"],"sources":["/root/stackly-app/src/components/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Messages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch existing messages from backend\r\n    axios.get('/api/messages').then((response) => {\r\n      setMessages(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    axios.post('/api/messages', { text: newMessage }).then(() => {\r\n      setMessages([...messages, { text: newMessage }]);\r\n      setNewMessage('');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Messages</h3>\r\n      <ul>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message.text}</li>\r\n        ))}\r\n      </ul>\r\n      <input\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n        placeholder=\"Type your message\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACd;AACAC,KAAK,CAACU,GAAG,CAAC,eAAe,CAAC,CAACC,IAAI,CAAEC,QAAQ,EAAK,CAC5CL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxBd,KAAK,CAACe,IAAI,CAAC,eAAe,CAAE,CAAEC,IAAI,CAAER,UAAW,CAAC,CAAC,CAACG,IAAI,CAAC,IAAM,CAC3DJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEU,IAAI,CAAER,UAAW,CAAC,CAAC,CAAC,CAChDC,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,CAAC,CACJ,CAAC,CAED,mBACEL,KAAA,QAAAa,QAAA,eACEf,IAAA,OAAAe,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBf,IAAA,OAAAe,QAAA,CACGX,QAAQ,CAACY,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBAC3BlB,IAAA,OAAAe,QAAA,CAAiBE,OAAO,CAACH,IAAI,EAApBI,KAAyB,CACnC,CAAC,CACA,CAAC,cACLlB,IAAA,UACEmB,KAAK,CAAEb,UAAW,CAClBc,QAAQ,CAAGC,CAAC,EAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC/CI,WAAW,CAAC,mBAAmB,CAChC,CAAC,cACFvB,IAAA,WAAQwB,OAAO,CAAEZ,WAAY,CAAAG,QAAA,CAAC,MAAI,CAAQ,CAAC,EACxC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}