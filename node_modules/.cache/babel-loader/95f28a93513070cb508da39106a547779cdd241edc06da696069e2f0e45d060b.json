{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProgressTracker=()=>{const[progress,setProgress]=useState(0);useEffect(()=>{// Fetch project progress from backend\naxios.get('/api/progress').then(response=>{setProgress(response.data);});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Project Progress\"}),/*#__PURE__*/_jsxs(\"progress\",{value:progress,max:\"100\",children:[progress,\"%\"]})]});};export default ProgressTracker;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","ProgressTracker","progress","setProgress","get","then","response","data","children","value","max"],"sources":["/root/stackly-app/src/components/ProgressTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProgressTracker = () => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch project progress from backend\r\n    axios.get('/api/progress').then((response) => {\r\n      setProgress(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Project Progress</h3>\r\n      <progress value={progress} max=\"100\">{progress}%</progress>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressTracker;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CAE3CC,SAAS,CAAC,IAAM,CACd;AACAC,KAAK,CAACQ,GAAG,CAAC,eAAe,CAAC,CAACC,IAAI,CAAEC,QAAQ,EAAK,CAC5CH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,KAAA,QAAAQ,QAAA,eACEV,IAAA,OAAAU,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBR,KAAA,aAAUS,KAAK,CAAEP,QAAS,CAACQ,GAAG,CAAC,KAAK,CAAAF,QAAA,EAAEN,QAAQ,CAAC,GAAC,EAAU,CAAC,EACxD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}